//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1026
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AntServiceStack.Common.Types
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Runtime.Serialization;
    using System.Collections.Generic;
    using AntServiceStack.ProtoBuf;
    using AntServiceStack.Baiji.Specific;
    using System.Linq;
    
    
    /// <summary>
    /// Simplest H5 request type without request data except H5 request head.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1026")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soa.ctrip.com/mobile/common/types/v1")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://soa.ctrip.com/mobile/common/types/v1", IsNullable=true)]
    [DataContract(Namespace="http://soa.ctrip.com/mobile/common/types/v1")]
    [ProtoContract()]
    public partial class SimpleH5RequestType : ISpecificRecord, IHasMobileRequestHead
    {
        
        private MobileRequestHead headField;
        
        public static readonly AntServiceStack.Baiji.Schema.Schema SCHEMA = AntServiceStack.Baiji.Schema.Schema.Parse(((("{\"type\":\"record\",\"name\":\"SimpleH5RequestType\",\"namespace\":\"" + typeof(SimpleH5RequestType).Namespace) 
                        + (("\",\"doc\":null,\"fields\":[{\"name\":\"head\",\"type\":{\"type\":\"record\",\"name\":\"MobileReque" +
                            "stHead\",\"namespace\":\"" + typeof(MobileRequestHead).Namespace) 
                        + (@""",""doc"":null,""fields"":[{""name"":""syscode"",""type"":[""string"",""null""]},{""name"":""lang"",""type"":[""string"",""null""]},{""name"":""auth"",""type"":[""string"",""null""]},{""name"":""cid"",""type"":[""string"",""null""]},{""name"":""ctok"",""type"":[""string"",""null""]},{""name"":""cver"",""type"":[""string"",""null""]},{""name"":""sid"",""type"":[""string"",""null""]},{""name"":""extension"",""type"":[{""type"":""array"",""items"":{""type"":""record"",""name"":""ExtensionFieldType"",""namespace"":""" + typeof(ExtensionFieldType).Namespace))) 
                        + "\",\"doc\":null,\"fields\":[{\"name\":\"name\",\"type\":[\"string\",\"null\"]},{\"name\":\"value\",\"" +
                            "type\":[\"string\",\"null\"]}]}},\"null\"]},{\"name\":\"pauth\",\"type\":[\"string\",\"null\"]},{" +
                            "\"name\":\"sauth\",\"type\":[\"string\",\"null\"]}]}}]}"));
        
        [DataMember()]
        [ProtoMember(1)]
        public MobileRequestHead head
        {
            get
            {
                return this.headField;
            }
            set
            {
                this.headField = value;
            }
        }
        
        public virtual AntServiceStack.Baiji.Schema.Schema GetSchema()
        {
            return SCHEMA;
        }
        
        public virtual object Get(int fieldPos)
        {
            switch(fieldPos)
            {
                case 0: return this.head;
                default: throw new AntServiceStack.Baiji.Exceptions.BaijiRuntimeException("Bad index " + fieldPos + " in Get()");
            }
        }
        
        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch(fieldPos)
            {
                case 0: this.head = (MobileRequestHead)fieldValue; break;
                default: throw new AntServiceStack.Baiji.Exceptions.BaijiRuntimeException("Bad index " + fieldPos + " in Put()");
            }
        }
        
        public virtual object Get(string fieldName)
        {
            var recordSchema = GetSchema() as AntServiceStack.Baiji.Schema.RecordSchema;
            if (recordSchema == null)
            {
                return null;
            }
            AntServiceStack.Baiji.Schema.Field field;
            if (!recordSchema.TryGetField(fieldName, out field))
            {
                return null;
            }
            return Get(field.Pos);
        }
        
        public virtual void Put(string fieldName, object fieldValue)
        {
            var recordSchema = GetSchema() as AntServiceStack.Baiji.Schema.RecordSchema;
            if (recordSchema == null)
            {
                return ;
            }
            AntServiceStack.Baiji.Schema.Field field;
            if (!recordSchema.TryGetField(fieldName, out field))
            {
                return ;
            }
            Put(field.Pos, fieldValue);
        }
    }
}
