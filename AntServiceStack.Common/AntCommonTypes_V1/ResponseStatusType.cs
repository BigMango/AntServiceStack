//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1026
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AntServiceStack.Common.Types
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Runtime.Serialization;
    using System.Collections.Generic;
    using AntServiceStack.ProtoBuf;
    using AntServiceStack.ServiceHost;
    using AntServiceStack.Baiji.Specific;
    using System.Linq;


    /// <summary>
    /// Response status type definition of a response payload. Per ant SOA policy, all
    /// concrete response types must include this response status type as a root element with element name 'ResponseStatus'.
    /// This is requreied for unified response status/error handling at framework level.
    /// The recommended naming convention we use for the concrete type names is the name
    /// of the service (the verb or call name) followed by "ResponseType": VerbNameResponseType
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1026")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace= "http://soa.ant.com/common/types/v1")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace= "http://soa.ant.com/common/types/v1", IsNullable=true)]
    [DataContract(Namespace= "http://soa.ant.com/common/types/v1")]
    [ProtoContract()]
    public partial class ResponseStatusType : ISpecificRecord
    {
        
        private System.DateTime timestampField;
        
        private AckCodeType ackField;
        
        private List<ErrorDataType> errorsField;
        
        private string buildField;
        
        private string versionField;
        
        private List<ExtensionType> extensionField;
        
        public static readonly AntServiceStack.Baiji.Schema.Schema SCHEMA = AntServiceStack.Baiji.Schema.Schema.Parse(((("{\"type\":\"record\",\"name\":\"ResponseStatusType\",\"namespace\":\"" + typeof(ResponseStatusType).Namespace) 
                        + (("\",\"doc\":null,\"fields\":[{\"name\":\"Timestamp\",\"type\":\"datetime\"},{\"name\":\"Ack\",\"type" +
                            "\":{\"type\":\"enum\",\"name\":\"AckCodeType\",\"namespace\":\"" + typeof(AckCodeType).Namespace) 
                        + (("\",\"doc\":null,\"symbols\":[\"Success\",\"Failure\",\"Warning\",\"PartialFailure\"]}},{\"name\"" +
                            ":\"Errors\",\"type\":[{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ErrorDataType" +
                            "\",\"namespace\":\"" + typeof(ErrorDataType).Namespace) 
                        + (("\",\"doc\":null,\"fields\":[{\"name\":\"Message\",\"type\":[\"string\",\"null\"]},{\"name\":\"Error" +
                            "Code\",\"type\":[\"string\",\"null\"]},{\"name\":\"StackTrace\",\"type\":[\"string\",\"null\"]},{" +
                            "\"name\":\"SeverityCode\",\"type\":{\"type\":\"enum\",\"name\":\"SeverityCodeType\",\"namespace" +
                            "\":\"" + typeof(SeverityCodeType).Namespace) 
                        + (("\",\"doc\":null,\"symbols\":[\"Error\",\"Warning\"]}},{\"name\":\"ErrorFields\",\"type\":[{\"type" +
                            "\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ErrorFieldType\",\"namespace\":\"" + typeof(ErrorFieldType).Namespace) 
                        + ((@""",""doc"":null,""fields"":[{""name"":""FieldName"",""type"":[""string"",""null""]},{""name"":""ErrorCode"",""type"":[""string"",""null""]},{""name"":""Message"",""type"":[""string"",""null""]}]}},""null""]},{""name"":""ErrorClassification"",""type"":{""type"":""enum"",""name"":""ErrorClassificationCodeType"",""namespace"":""" + typeof(ErrorClassificationCodeType).Namespace) 
                        + (@""",""doc"":null,""symbols"":[""ServiceError"",""ValidationError"",""FrameworkError"",""SLAError""]}}]}},""null""]},{""name"":""Build"",""type"":[""string"",""null""]},{""name"":""Version"",""type"":[""string"",""null""]},{""name"":""Extension"",""type"":[{""type"":""array"",""items"":{""type"":""record"",""name"":""ExtensionType"",""namespace"":""" + typeof(ExtensionType).Namespace))))))) 
                        + "\",\"doc\":null,\"fields\":[{\"name\":\"Id\",\"type\":[\"string\",\"null\"]},{\"name\":\"Version\",\"" +
                            "type\":[\"string\",\"null\"]},{\"name\":\"ContentType\",\"type\":[\"string\",\"null\"]},{\"name\"" +
                            ":\"Value\",\"type\":[\"string\",\"null\"]}]}},\"null\"]}]}"));
        
        /// <summary>
        /// This value represents the date and time when a ant service processed the
        /// request. The value of this element is set by framework automatically,
        /// value set by serivce implementation will be overwritten.
        /// </summary>
        [DataMember()]
        [ProtoMember(1)]
        public System.DateTime Timestamp
        {
            get
            {
                return this.timestampField;
            }
            set
            {
                this.timestampField = value;
            }
        }
        
        /// <summary>
        /// Indicates whether the call was successfully processed by ant.
        /// </summary>
        [DataMember()]
        [ProtoMember(2)]
        public AckCodeType Ack
        {
            get
            {
                return this.ackField;
            }
            set
            {
                this.ackField = value;
            }
        }
        
        /// <summary>
        /// A list of framework, validation or service-level errors or warnings (if any) that were raised
        /// when a ant service processed the request.
        /// Only returned if there were warnings or errors.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("Errors")]
        [DataMember()]
        [ProtoMember(3)]
        public List<ErrorDataType> Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new List<ErrorDataType>();
                }
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        
        /// <summary>
        /// This refers to the particular software build that ant service used when
        /// processing the request and generating the response. This includes the
        /// version number plus additional information.
        /// </summary>
        [DataMember()]
        [ProtoMember(4)]
        public string Build
        {
            get
            {
                return this.buildField;
            }
            set
            {
                this.buildField = value;
            }
        }
        
        /// <summary>
        /// The version of service used to process the request.
        /// </summary>
        [DataMember()]
        [ProtoMember(5)]
        public string Version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                this.versionField = value;
            }
        }
        
        /// <summary>
        /// Reserved for future extension.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("Extension")]
        [DataMember()]
        [ProtoMember(6)]
        public List<ExtensionType> Extension
        {
            get
            {
                if ((this.extensionField == null))
                {
                    this.extensionField = new List<ExtensionType>();
                }
                return this.extensionField;
            }
            set
            {
                this.extensionField = value;
            }
        }
        
        public virtual AntServiceStack.Baiji.Schema.Schema GetSchema()
        {
            return SCHEMA;
        }
        
        public virtual object Get(int fieldPos)
        {
            switch(fieldPos)
            {
                case 0: return this.Timestamp;
                case 1: return this.Ack;
                case 2: return this.Errors;
                case 3: return this.Build;
                case 4: return this.Version;
                case 5: return this.Extension;
                default: throw new AntServiceStack.Baiji.Exceptions.BaijiRuntimeException("Bad index " + fieldPos + " in Get()");
            }
        }
        
        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch(fieldPos)
            {
                case 0: this.Timestamp = (System.DateTime)fieldValue; break;
                case 1: this.Ack = (AckCodeType)fieldValue; break;
                case 2: this.Errors = (List<ErrorDataType>)fieldValue; break;
                case 3: this.Build = (System.String)fieldValue; break;
                case 4: this.Version = (System.String)fieldValue; break;
                case 5: this.Extension = (List<ExtensionType>)fieldValue; break;
                default: throw new AntServiceStack.Baiji.Exceptions.BaijiRuntimeException("Bad index " + fieldPos + " in Put()");
            }
        }
        
        public virtual object Get(string fieldName)
        {
            var recordSchema = GetSchema() as AntServiceStack.Baiji.Schema.RecordSchema;
            if (recordSchema == null)
            {
                return null;
            }
            AntServiceStack.Baiji.Schema.Field field;
            if (!recordSchema.TryGetField(fieldName, out field))
            {
                return null;
            }
            return Get(field.Pos);
        }
        
        public virtual void Put(string fieldName, object fieldValue)
        {
            var recordSchema = GetSchema() as AntServiceStack.Baiji.Schema.RecordSchema;
            if (recordSchema == null)
            {
                return ;
            }
            AntServiceStack.Baiji.Schema.Field field;
            if (!recordSchema.TryGetField(fieldName, out field))
            {
                return ;
            }
            Put(field.Pos, fieldValue);
        }
    }
}
